//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.33440
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EcConfig.Core.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class EcConfigResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal EcConfigResources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EcConfig.Core.Resources.EcConfigResources", typeof(EcConfigResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à EcConfig_EcConfs_bc8c1337d0804ae74f3551c86dad2629.
        /// </summary>
        public static string CacheKey_EcConfigs {
            get {
                return ResourceManager.GetString("CacheKey_EcConfigs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à EcConfig_Properties_bc8c1337d0804ae74f3551c86dad2629.
        /// </summary>
        public static string CacheKey_Properties {
            get {
                return ResourceManager.GetString("CacheKey_Properties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à default.
        /// </summary>
        public static string Config_Filename_Default {
            get {
                return ResourceManager.GetString("Config_Filename_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à {0}.config.
        /// </summary>
        public static string ConfigFileNameFormat {
            get {
                return ResourceManager.GetString("ConfigFileNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à key.
        /// </summary>
        public static string KeyAttribute {
            get {
                return ResourceManager.GetString("KeyAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ..
        /// </summary>
        public static string PropertyJoinCharacter {
            get {
                return ResourceManager.GetString("PropertyJoinCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à p.
        /// </summary>
        public static string PropertyTag {
            get {
                return ResourceManager.GetString("PropertyTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 10.
        /// </summary>
        public static string RecursiveLevel {
            get {
                return ResourceManager.GetString("RecursiveLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Recursive level reached ({0}).
        /// </summary>
        public static string RecursiveLevelReached {
            get {
                return ResourceManager.GetString("RecursiveLevelReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à value.
        /// </summary>
        public static string ValueAttribute {
            get {
                return ResourceManager.GetString("ValueAttribute", resourceCulture);
            }
        }
    }
}
